{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/counter/counter.js","app.js","index.js"],"names":["Header","React","Component","Footer","Counter","props","handleUp","count","state","updateCounter","handleDown","pop","this","setState","polarity","classes","join","className","onClick","App","Fragment","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gRAYeA,E,iLARX,OACE,gCACE,4D,GAJaC,IAAMC,WCOZC,E,iLAJX,OAAO,iE,GAFUF,IAAMC,WCsCZE,E,YAtCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAIRC,SAAW,WACT,IAAMC,EAAQ,EAAKC,MAAMD,MAAQ,EACjC,EAAKE,cAAcF,IAPF,EAUnBG,WAAa,WACX,IAAMH,EAAQ,EAAKC,MAAMD,MAAQ,EACjC,EAAKE,cAAcF,IAVnB,EAAKC,MAAQ,CAAED,MAAO,GAFL,E,2EAgBLA,GACZ,IAAII,EAAM,GACNJ,EAAQ,EACVI,EAAM,WACGJ,EAAQ,IACjBI,EAAM,YAERC,KAAKC,SAAS,CAAEN,QAAOO,SAAUH,M,+BAIjC,IAAMI,EAAU,CAAC,QAASH,KAAKJ,MAAMG,KAAKK,KAAK,KAC/C,OACE,6BAASC,UAAU,WACjB,4BAAQA,UAAU,YAAYC,QAASN,KAAKF,YAA5C,KACA,0BAAMO,UAAWF,GAAUH,KAAKJ,MAAMD,OACtC,4BAAQU,UAAU,YAAYC,QAASN,KAAKN,UAA5C,U,GAjCcL,IAAMC,WCiBbiB,G,uLAVX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUnB,IAAMC,YCFlBmB,E,iLAEF,OAAO,kBAAC,EAAD,U,GAFQpB,IAAMC,WAMnBoB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,I","file":"static/js/main.bc576e09.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>Counter-app-using-React</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;","  \nimport React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy; 2020 obada-almatrami</footer>;\n  }\n}\n\nexport default Footer;","import React from 'react';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  handleUp = () => {\n    const count = this.state.count + 1;\n    this.updateCounter(count);\n  };\n\n  handleDown = () => {\n    const count = this.state.count - 1;\n    this.updateCounter(count);\n  };\n\n  \n  updateCounter(count) {\n    let pop = '';\n    if (count > 0) {\n      pop = 'positive';\n    } else if (count < 0) {\n      pop = 'negative';\n    }\n    this.setState({ count, polarity: pop });\n  }\n\n  render() {\n    const classes = ['count', this.state.pop].join(' ');\n    return (\n      <section className=\"counter\">\n        <button className=\"decrement\" onClick={this.handleDown}>-</button>\n        <span className={classes}>{this.state.count}</span>\n        <button className=\"increment\" onClick={this.handleUp}>+</button>\n      </section>\n    );\n  }\n}\n\nexport default Counter;","import React from 'react';\n\nimport Header from './components/header/header.js';\nimport Footer from './components/footer/footer.js';\nimport Counter from './components/counter/counter.js';\nimport './style/app.scss';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Counter />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}